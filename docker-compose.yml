version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: loan-extractor-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-loanextractor}
      POSTGRES_USER: ${POSTGRES_USER:-loanuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-loanpass123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - loan-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-loanuser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: loan-extractor-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    networks:
      - loan-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: loan-extractor-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - loan-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: loan-extractor-api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-loanuser}:${POSTGRES_PASSWORD:-loanpass123}@db:5432/${POSTGRES_DB:-loanextractor}
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-loan-documents}
      REDIS_URL: redis://redis:6379/0
      API_HOST: 0.0.0.0
      API_PORT: 8000
      API_WORKERS: ${API_WORKERS:-4}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-encryption-key-change-in-production}
      TESSERACT_CMD: /usr/bin/tesseract
      MAX_FILE_SIZE_MB: ${MAX_FILE_SIZE_MB:-50}
      MAX_PAGES: ${MAX_PAGES:-50}
      GOOGLE_APPLICATION_CREDENTIALS: /app/service-account-key.json
      DOCUMENT_AI_PROJECT_ID: rich-atom-476217-j9
      DOCUMENT_AI_LOCATION: us
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
    ports:
      - "${API_PORT:-8000}:8000"
    networks:
      - loan-network
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Dashboard Service
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
      target: dashboard
    container_name: loan-extractor-dashboard
    environment:
      API_URL: http://api:8000
      STREAMLIT_SERVER_PORT: 8501
      STREAMLIT_SERVER_ADDRESS: 0.0.0.0
    ports:
      - "${DASHBOARD_PORT:-8501}:8501"
    networks:
      - loan-network
    depends_on:
      - api
    restart: unless-stopped

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    container_name: loan-extractor-worker
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-loanuser}:${POSTGRES_PASSWORD:-loanpass123}@db:5432/${POSTGRES_DB:-loanextractor}
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-loan-documents}
      REDIS_URL: redis://redis:6379/0
      TESSERACT_CMD: /usr/bin/tesseract
      WORKER_CONCURRENCY: ${WORKER_CONCURRENCY:-2}
      WORKER_QUEUE: ${WORKER_QUEUE:-document-processing}
      GOOGLE_APPLICATION_CREDENTIALS: /app/service-account-key.json
      DOCUMENT_AI_PROJECT_ID: rich-atom-476217-j9
      DOCUMENT_AI_LOCATION: us
    volumes:
      - ./temp:/app/temp
      - ./processing:/app/processing
    networks:
      - loan-network
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

networks:
  loan-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
